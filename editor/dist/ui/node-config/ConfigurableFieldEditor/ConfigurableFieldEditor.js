"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigurableFieldEditor = ConfigurableFieldEditor;
const jsx_runtime_1 = require("react/jsx-runtime");
const ConfigurableValueBaseEditor_1 = require("./ConfigurableValueBaseEditor");
const react_1 = require("react");
const convertValues_1 = require("./convertValues");
const __1 = require("../..");
function FieldContent({ config, value, onChange, handleDialogToggle, isExpanded, onTypeChange, nodeId, insId, }) {
    const shouldShowExpand = !isExpanded &&
        (value.type === "json" ||
            (value.type === "string" && config.type === "longtext"));
    const typeOptions = [
        "dynamic",
        "number",
        "boolean",
        "json",
        "string",
    ];
    return ((0, jsx_runtime_1.jsxs)("div", { className: "mb-1 font-medium flex items-center gap-2 justify-between", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [config.label, ":"] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [config.typeConfigurable !== false && onTypeChange && ((0, jsx_runtime_1.jsxs)("div", { className: "text-xs text-gray-500 flex items-center gap-1", children: [(0, jsx_runtime_1.jsx)("span", { className: "capitalize", children: value.type }), (0, jsx_runtime_1.jsxs)(__1.DropdownMenu, { children: [(0, jsx_runtime_1.jsx)(__1.DropdownMenuTrigger, { asChild: true, children: (0, jsx_runtime_1.jsx)(__1.Button, { variant: "link", size: "xs", className: "h-4 p-0 text-xs", children: (0, jsx_runtime_1.jsx)(__1.Settings, { className: "h-4 w-4" }) }) }), (0, jsx_runtime_1.jsx)(__1.DropdownMenuContent, { align: "end", children: typeOptions.map((type) => ((0, jsx_runtime_1.jsx)(__1.DropdownMenuItem, { onClick: () => onTypeChange(type), children: (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between w-full", children: [(0, jsx_runtime_1.jsx)("span", { className: "capitalize", children: type }), value.type === type && (0, jsx_runtime_1.jsx)(__1.Check, { className: "h-4 w-4 ml-2" })] }) }, type))) })] })] })), config.aiCompletion && (value.type === "json" || value.type === "string") && ((0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsx)(__1.AiGenerate, { prompt: config.aiCompletion.prompt, placeholder: config.aiCompletion.placeholder, jsonMode: value.type === "json", currentValue: value.value, nodeId: nodeId, insId: insId, onComplete: (text) => {
                                try {
                                    const parsed = JSON.parse(text);
                                    onChange({
                                        ...value,
                                        value: parsed,
                                    });
                                }
                                catch {
                                    onChange({ ...value, value: text });
                                }
                            } }) })), shouldShowExpand && handleDialogToggle && ((0, jsx_runtime_1.jsx)(__1.Button, { variant: "outline", size: "xs", onClick: handleDialogToggle, children: (0, jsx_runtime_1.jsx)(__1.Expand, { size: 12 }) }))] })] }));
}
function ConfigurableFieldEditor(props) {
    const { config, value, onChange, ports, nodeId, insId } = props;
    const [isDialogOpen, setIsDialogOpen] = (0, react_1.useState)(false);
    const [rawJsonData, setRawJsonData] = (0, react_1.useState)(value.type === "json" ? JSON.stringify(value.value, null, 2) : "");
    (0, react_1.useEffect)(() => {
        if (value.type === "json" && typeof value.value !== "string") {
            setRawJsonData(JSON.stringify(value.value, null, 2));
        }
    }, [value]);
    const changeType = (0, react_1.useCallback)((newType) => {
        const newValue = (0, convertValues_1.convertValue)(value.type, newType, value.value);
        onChange({ type: newType, value: newValue });
    }, [value, onChange]);
    const handleDialogToggle = () => {
        setIsDialogOpen(!isDialogOpen);
    };
    const isTemplateSupported = ((value.type === "string" && config.type !== 'secret') || value.type === "json") &&
        config.templateSupport !== false;
    return ((0, jsx_runtime_1.jsxs)("div", { className: "mb-4 group", children: [(0, jsx_runtime_1.jsx)(FieldContent, { config: config, value: value, onChange: onChange, handleDialogToggle: handleDialogToggle, onTypeChange: changeType, nodeId: nodeId, insId: insId }), (0, jsx_runtime_1.jsx)(ConfigurableValueBaseEditor_1.ConfigurableValueBaseEditor, { value: value, onChange: onChange, fieldDefinition: config, isExpanded: false, rawJsonData: rawJsonData, onRawJsonDataChange: setRawJsonData, ports: ports }), (0, jsx_runtime_1.jsxs)("div", { className: "mt-2 flex justify-between items-center", children: [config.description ? ((0, jsx_runtime_1.jsx)("div", { className: "text-xs text-gray-500 dark:text-gray-400 italic", children: config.description })) : ((0, jsx_runtime_1.jsx)("div", {})), isTemplateSupported && ((0, jsx_runtime_1.jsx)(__1.TooltipProvider, { delayDuration: 0, children: (0, jsx_runtime_1.jsxs)(__1.Tooltip, { children: [(0, jsx_runtime_1.jsx)(__1.TooltipTrigger, { asChild: true, children: (0, jsx_runtime_1.jsxs)(__1.Button, { variant: "ghost", size: "xs", className: "p-0 h-4 text-xs text-gray-500", children: ["Variables supported ", (0, jsx_runtime_1.jsx)(__1.Info, { className: "h-3 w-3 text-gray-500 ml-1" })] }) }), (0, jsx_runtime_1.jsx)(__1.TooltipContent, { className: "max-w-[300px]", children: "Use {{ }} to insert variables. For example {{myVar}} or {{myVar.someProp}}. Each distinct variable will be exposed as an input and can be used to receive dynamic values from other nodes." })] }) }))] }), (0, jsx_runtime_1.jsxs)(__1.Dialog, { open: isDialogOpen, onOpenChange: setIsDialogOpen, modal: false, children: [(0, jsx_runtime_1.jsx)(__1.DialogTrigger, { asChild: true, children: (0, jsx_runtime_1.jsx)("button", { className: "hidden", children: "Open Dialog" }) }), (0, jsx_runtime_1.jsxs)(__1.DialogContent, { className: "max-w-screen-lg w-[90vw] !h-[90vh] !w-[90vw]", noCloseButton: true, noInteractOutside: true, children: [(0, jsx_runtime_1.jsx)(FieldContent, { config: config, value: value, onChange: onChange, isExpanded: true, onTypeChange: isDialogOpen ? changeType : undefined, nodeId: nodeId, insId: insId }), (0, jsx_runtime_1.jsx)(ConfigurableValueBaseEditor_1.ConfigurableValueBaseEditor, { value: value, onChange: onChange, fieldDefinition: config, isExpanded: true, rawJsonData: rawJsonData, onRawJsonDataChange: setRawJsonData, ports: ports }), (0, jsx_runtime_1.jsxs)("div", { className: "mt-2 flex justify-between items-center", children: [config.description ? ((0, jsx_runtime_1.jsx)("div", { className: "text-xs text-gray-500 dark:text-gray-400 italic", children: config.description })) : ((0, jsx_runtime_1.jsx)("div", {})), isTemplateSupported && ((0, jsx_runtime_1.jsx)(__1.TooltipProvider, { delayDuration: 0, children: (0, jsx_runtime_1.jsxs)(__1.Tooltip, { children: [(0, jsx_runtime_1.jsx)(__1.TooltipTrigger, { asChild: true, children: (0, jsx_runtime_1.jsxs)(__1.Button, { variant: "ghost", size: "xs", className: "p-0 h-4 text-xs text-gray-500", children: ["Variables supported ", (0, jsx_runtime_1.jsx)(__1.Info, { className: "h-3 w-3 text-gray-500 ml-1" })] }) }), (0, jsx_runtime_1.jsx)(__1.TooltipContent, { children: "Use {{ }} to insert variables. For example {{myVar}} or {{myVar.someProp}}" })] }) }))] }), (0, jsx_runtime_1.jsx)("div", { className: "mt-6 flex justify-end", children: (0, jsx_runtime_1.jsx)(__1.Button, { onClick: () => setIsDialogOpen(false), children: "Close" }) })] })] })] }));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uZmlndXJhYmxlRmllbGRFZGl0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvdWkvbm9kZS1jb25maWcvQ29uZmlndXJhYmxlRmllbGRFZGl0b3IvQ29uZmlndXJhYmxlRmllbGRFZGl0b3IudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBNEdBLDBEQTRJQzs7QUFsUEQsK0VBQTRFO0FBQzVFLGlDQUF5RDtBQUN6RCxtREFBK0M7QUFDL0MsNkJBR2U7QUFFZixTQUFTLFlBQVksQ0FBQyxFQUNwQixNQUFNLEVBQ04sS0FBSyxFQUNMLFFBQVEsRUFDUixrQkFBa0IsRUFDbEIsVUFBVSxFQUNWLFlBQVksRUFDWixNQUFNLEVBQ04sS0FBSyxHQVVOO0lBQ0MsTUFBTSxnQkFBZ0IsR0FDcEIsQ0FBQyxVQUFVO1FBQ1gsQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLE1BQU07WUFDcEIsQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLFFBQVEsSUFBSSxNQUFNLENBQUMsSUFBSSxLQUFLLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFFN0QsTUFBTSxXQUFXLEdBQWdDO1FBQy9DLFNBQVM7UUFDVCxRQUFRO1FBQ1IsU0FBUztRQUNULE1BQU07UUFDTixRQUFRO0tBQ1QsQ0FBQztJQUVGLE9BQU8sQ0FDTCxpQ0FBSyxTQUFTLEVBQUMsMERBQTBELGFBQ3ZFLGlDQUFLLFNBQVMsRUFBQyx5QkFBeUIsYUFDckMsTUFBTSxDQUFDLEtBQUssU0FDVCxFQUNOLGlDQUFLLFNBQVMsRUFBQyx5QkFBeUIsYUFDckMsTUFBTSxDQUFDLGdCQUFnQixLQUFLLEtBQUssSUFBSSxZQUFZLElBQUksQ0FDcEQsaUNBQUssU0FBUyxFQUFDLCtDQUErQyxhQUM1RCxpQ0FBTSxTQUFTLEVBQUMsWUFBWSxZQUFFLEtBQUssQ0FBQyxJQUFJLEdBQVEsRUFDaEQsd0JBQUMsZ0JBQVksZUFDWCx1QkFBQyx1QkFBbUIsSUFBQyxPQUFPLGtCQUMxQix1QkFB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