import { jsxs as _jsxs, jsx as _jsx } from "react/jsx-runtime";
import * as React from "react";
import { noop } from "@flyde/core";
import { BaseNodeView } from "../base-node-view";
import classNames from "classnames";
import { usePrompt } from "../../flow-editor/ports";
import { getInputName, getOutputName } from "../pin-view/helpers";
import { useDarkMode } from "../../flow-editor/DarkModeContext";
import { PinView } from "../pin-view/PinView";
import { getMainPinDomId } from "../dom-ids";
import { ContextMenuContent, ContextMenuItem, ContextMenuSeparator, } from "../../ui";
export const NodeIoView = React.memo(function NodeIoViewInner(props) {
    const { viewPort, selected, type, id, onDblClick, onRename, onDelete, onChangeInputMode, inputMode, onSelect, closest, onSetDescription, description, onMouseUp, onMouseDown, currentInsId, onDragStart, onDragEnd, pos, } = props;
    const lastDragEndTimeRef = React.useRef(0);
    const _onDragStart = React.useCallback((event, data) => {
        onDragStart(id, event, data);
    }, [id, onDragStart]);
    const _onDragEnd = React.useCallback((event, data) => {
        const currPos = pos;
        const dx = (data.x - currPos.x) / viewPort.zoom;
        const dy = (data.y - currPos.y) / viewPort.zoom;
        const newX = currPos.x + dx;
        const newY = currPos.y + dy;
        const pixelsMoved = Math.abs(dx) + Math.abs(dy);
        onDragEnd(type, id, event, { ...data, x: newX, y: newY });
        if (pixelsMoved > 0) {
            lastDragEndTimeRef.current = Date.now();
        }
    }, [pos, viewPort.zoom, onDragEnd, type, id]);
    const onDragMove = (event, data) => {
        props.onDragMove(type, id, event, { x: data.x, y: data.y });
    };
    const _prompt = usePrompt();
    const _onSetDescription = React.useCallback(async () => {
        const newDescription = await _prompt("Description?", description);
        onSetDescription(type, id, newDescription !== null && newDescription !== void 0 ? newDescription : "");
    }, [_prompt, description, onSetDescription, type, id]);
    const onDeleteInner = React.useCallback(() => {
        if (onDelete) {
            onDelete(type, id);
        }
    }, [type, id, onDelete]);
    const onRenameInner = React.useCallback(() => {
        if (onRename) {
            onRename(type, id);
        }
    }, [type, id, onRename]);
    const onChangeInputModeInner = React.useCallback((mode) => {
        if (onChangeInputMode) {
            onChangeInputMode(id, mode);
        }
    }, [id, onChangeInputMode]);
    const contextMenuItems = React.useCallback(() => {
        return [
            _jsxs(ContextMenuItem, { disabled: true, children: ["Current mode - ", inputMode] }, "mode"),
            _jsx(ContextMenuSeparator, {}, "sep1"),
            _jsx(ContextMenuItem, { onClick: () => onChangeInputModeInner("required"), children: "Make required" }, "required"),
            _jsx(ContextMenuItem, { onClick: () => onChangeInputModeInner("optional"), children: "Make optional" }, "optional"),
            _jsx(ContextMenuItem, { onClick: () => onChangeInputModeInner("required-if-connected"), children: "Make required-if-connected" }, "required-if-connected"),
            _jsx(ContextMenuSeparator, {}, "sep2"),
            _jsx(ContextMenuItem, { onClick: _onSetDescription, children: "Set description" }, "description"),
            ...(props.onRename
                ? [
                    _jsx(ContextMenuItem, { onClick: onRenameInner, children: "Rename" }, "rename"),
                ]
                : []),
            ...(props.onDelete
                ? [
                    _jsx(ContextMenuItem, { className: "text-red-500", onClick: onDeleteInner, children: "Delete" }, "delete"),
                ]
                : []),
        ];
    }, [
        _onSetDescription,
        inputMode,
        onChangeInputModeInner,
        onDeleteInner,
        onRenameInner,
        props.onDelete,
        props.onRename,
    ]);
    const getContextMenu = React.useCallback(() => {
        return _jsx(ContextMenuContent, { children: contextMenuItems() });
    }, [contextMenuItems]);
    const onDblClickInner = React.useCallback((e) => {
        if (onDblClick) {
            onDblClick(props.id, e);
        }
    }, [onDblClick, props.id]);
    const _onClick = React.useCallback((e) => {
        if (Date.now() - lastDragEndTimeRef.current > 200) {
            onSelect(id, type, e);
        }
    }, [id, type, onSelect]);
    const displayName = type === "input" ? getInputName(id) : getOutputName(id);
    const _onMouseUp = React.useCallback((e) => {
        const reversedType = type === "input" ? "output" : "input";
        onMouseUp(id, reversedType, e);
    }, [id, onMouseUp, type]);
    const _onMouseDown = React.useCallback((e) => {
        const reversedType = type === "input" ? "output" : "input";
        onMouseDown(id, reversedType, e);
    }, [id, onMouseDown, type]);
    const dark = useDarkMode();
    const pinContent = (_jsx("div", { className: classNames("pin-container", type), children: type === "input" ? (_jsx(PinView, { type: "output", currentInsId: currentInsId, ancestorsInsIds: props.ancestorInsIds, id: id, connected: props.connected, isClosestToMouse: closest, selected: selected, onClick: (pinId, pinType, e) => onSelect(pinId, pinType, e), onDoubleClick: (pinId, e) => onDblClick && onDblClick(pinId, e), onToggleLogged: noop, onToggleBreakpoint: noop, onInspect: noop, description: description, increasedDropArea: props.increasedDropArea, onMouseUp: (pinId, pinType, e) => {
                e.stopPropagation();
                _onMouseUp(e);
            }, onMouseDown: (pinId, pinType, e) => {
                e.stopPropagation();
                _onMouseDown(e);
            }, isMain: true })) : (_jsx(PinView, { type: "input", currentInsId: currentInsId, ancestorsInsIds: props.ancestorInsIds, id: id, connected: props.connected, isClosestToMouse: closest, selected: selected, onClick: (pinId, pinType) => onSelect(pinId, pinType), onDoubleClick: (pinId, e) => onDblClick && onDblClick(pinId, e), onToggleLogged: noop, onToggleBreakpoint: noop, onInspect: noop, description: description, increasedDropArea: props.increasedDropArea, onMouseUp: (pinId, pinType, e) => {
                e.stopPropagation();
                _onMouseUp(e);
            }, onMouseDown: (pinId, pinType, e) => {
                e.stopPropagation();
                _onMouseDown(e);
            }, onToggleSticky: noop, isSticky: false, queuedValues: 0, isMain: true })) }));
    const domId = getMainPinDomId(currentInsId, id, type);
    return (_jsx(BaseNodeView, { className: classNames(`node-io-view`, type, { dark }), pos: pos, icon: "arrow-right-long", description: description !== null && description !== void 0 ? description : `Main ${type} pin - ${id}`, onDragEnd: _onDragEnd, onDragStart: _onDragStart, onDragMove: onDragMove, viewPort: viewPort, heading: displayName, leftSide: type === "output" ? pinContent : undefined, rightSide: type === "input" ? pinContent : undefined, contextMenuContent: getContextMenu(), onClick: _onClick, onDoubleClick: onDblClickInner, selected: selected, dark: dark, domId: domId }));
});
//# sourceMappingURL=data:application/json;base64,